
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_advent_17_GeneralisedExtreme.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_advent_17_GeneralisedExtreme.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_advent_17_GeneralisedExtreme.py:


Day 17 : Generalised-Extreme
============================

.. GENERATED FROM PYTHON SOURCE LINES 8-43



.. image-sg:: /auto_examples/images/sphx_glr_plot_advent_17_GeneralisedExtreme_001.png
   :alt:   Generalised Extreme Value Distribution   $X \sim GEV(\xi, \mu=0, \sigma=1)$, Probability Density Function, Cumulative Distribution Function
   :srcset: /auto_examples/images/sphx_glr_plot_advent_17_GeneralisedExtreme_001.png
   :class: sphx-glr-single-img





.. code-block:: Python


    # Author: Dialid Santiago <d.santiago@outlook.com>
    # License: MIT
    # Description: Advent Calendar 2023

    import matplotlib.pyplot as plt
    from matplotlib.gridspec import GridSpec

    from scipy.stats import genextreme
    import numpy as np

    plt.style.use("https://raw.githubusercontent.com/quantgirluk/matplotlib-stylesheets/main/quant-pastel-light.mplstyle")

    title: str = f"\n Generalised Extreme Value Distribution \n $X \\sim GEV(\\xi, \\mu=0, \\sigma=1)$"

    fig = plt.figure(figsize=(10, 5), dpi=200)
    gs = GridSpec(1, 4, wspace=0.5)
    ax1 = fig.add_subplot(gs[:2])
    ax2 = fig.add_subplot(gs[2:])

    x = np.linspace(-4.0, 4.0, 1000)
    params = [(0.0, 1.0, 0.75), (0.0, 1.0, 0.5), (0.0, 1.0, 0.0), (0.0, 1.0, -0.5), (0.0, 1.0, -0.75)]
    for (a, b, c) in params:
        rv = genextreme(c=c, loc=a, scale=b)
        ax1.plot(x, rv.pdf(x), label=f"$\\xi={c}$")
        ax2.plot(x, rv.cdf(x), label=f"$\\xi={c}$")

    ax1.set_title(r'Probability Density Function', y=-0.18)
    ax2.legend(frameon=True, facecolor='white', framealpha=1)
    ax2.set_title('Cumulative Distribution Function', y=-0.18)
    fig.suptitle(title)
    gs.tight_layout(fig)

    # fig.savefig('17_GeneralisedExtremeValue')
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.220 seconds)


.. _sphx_glr_download_auto_examples_plot_advent_17_GeneralisedExtreme.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_advent_17_GeneralisedExtreme.ipynb <plot_advent_17_GeneralisedExtreme.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_advent_17_GeneralisedExtreme.py <plot_advent_17_GeneralisedExtreme.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_advent_17_GeneralisedExtreme.zip <plot_advent_17_GeneralisedExtreme.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
